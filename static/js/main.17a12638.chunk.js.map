{"version":3,"sources":["Components/Tile.js","Components/imgs/check.png","Components/NewTileForm.js","Components/Board.js","Components/BoardHandler.js","App.js","reportWebVitals.js","index.js"],"names":["Tile","props","name","className","onClick","this","src","image","alt","onError","e","target","onerror","React","Component","NewTileForm","handleSubmit","event","preventDefault","tiles","push","value","localStorage","setItem","boardName","JSON","stringify","document","getElementById","reset","length","hungry","state","Helmet","checkImage","onSubmit","id","type","placeholder","maxlength","onChange","handleNameChange","required","homeScreen","setState","Board","bind","addTiles","activateDeleteTile","newForm","delTile","changes","color","rows","createTiles","style","Object","keys","map","row","item","Col","selectBoard","counter","pos","forEach","tile","idx","console","log","data-key","clickTile","changeBackground","i","splice","updateStorage","msg","SpeechSynthesisUtterance","text","window","speechSynthesis","speak","BoardHandler","submit","button","getItem","parse","alert","default","removeItem","apple","water","meal","bathroom","play","boardForm","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.17a12638.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Board from './Board.js';\nimport '../index.css'\n\n\nclass Tile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.name = this.props.name;\n  }\n\n  render() {\n    return (\n      <div className=\"card tile\" onClick={this.props.onClick}>\n        <h3 >{this.props.name}</h3>\n        <img  className=\"ml-1 mr-1 mt-auto\" src={this.props.image} alt=\"Expected Image not found\" onError={(e)=>{e.target.onerror = null; e.target.src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwebstockreview.net%2Fimages%2Fclipart-borders-pizza.png&f=1&nofb=1\"}} />\n      </div>\n\n    );\n\n  }\n\n\n}\n\nexport default Tile","export default __webpack_public_path__ + \"static/media/check.a252283f.png\";","import React, { Component } from 'react'\nimport '../form.css';\nimport '../index.css'\nimport Tile from './Tile.js';\nimport checkImage from '../Components/imgs/check.png'\nimport { Helmet } from 'react-helmet';\n\nclass NewTileForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.length = 0;\n    this.hungry = \"Hungry\"\n    this.state = { name: this.hungry, image: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwebstockreview.net%2Fimages%2Fclipart-borders-pizza.png&f=1&nofb=1\" }\n  }\n\n  render() {\n    return (\n      <div className>\n        <Helmet>\n          <style>{'body { background: -webkit-linear-gradient(left, #0072ff, #00c6ff); }'}</style>\n        </Helmet>\n        <div className=\"container contact-form\">\n          <div className=\"contact-image\">\n            <img src={checkImage} alt=\"rocket_contact\" />\n          </div>\n          <form onSubmit={this.handleSubmit} id=\"submit-form\">\n            <h1>Create a new Tile</h1>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <h4>Tile Name</h4>\n                </div>\n                <div className=\"form-group\">\n                  <input type=\"text\" name=\"txtName\" className=\"form-control\" placeholder=\"Hungry *\" maxlength=\"25\" onChange={(event) => { this.handleNameChange(event.target.value) }} required />\n                </div>\n                <div className=\"form-group\">\n                  <h4>Image URL</h4>\n                  <input type=\"text\" name=\"txtEmail\" className=\"form-control\" placeholder=\"https://example.com *\" onChange={(event) => { this.checkImage(event.target.value) }} required />\n                </div>\n                <div className=\"d-flex justify-content-center mb-3\">\n                  <input type=\"submit\" name=\"btnSubmit\" className=\"btnContact btn-primary\" value=\"Add Tile\" />\n                </div>\n                <div className=\"form-group\">\n                  <input type=\"submit\" name=\"btnSubmit\" className=\"btnContact btn-success\" value=\"Submit\" onClick={this.props.homeScreen} />\n                  <input type=\"submit\" className=\"btnContact\" value=\"Cancel\" onClick={this.props.homeScreen} />\n                </div>\n                <div className=\"form-group\">\n\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"form-group\">\n                  <Tile className=\"mt-3\" name={this.state.name} image={this.state.image} />\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.tiles.push({ \"name\": event.target[0].value, \"image\": event.target[1].value });\n    localStorage.setItem(this.props.boardName, JSON.stringify(this.props.tiles));\n    document.getElementById(\"submit-form\").reset();\n  }\n\n  handleNameChange(event) {\n    /*let newLet = event.nativeEvent.data;\n    if (this.length == 0 && newLet != null) {\n      this.setState({ name: event.nativeEvent.data });\n      this.length++;\n    }\n    else if (this.length == 1 && newLet == null) {\n      this.setState({ name: this.hungry });\n      this.length--;\n    }\n    else if (newLet != null) {\n      this.setState({ name: this.state.name + event.nativeEvent.data });\n      this.length++;\n    } else {\n      this.setState({ name: this.state.name.slice(0, -1) });\n      this.length--;\n    }*/\n    this.setState( {name: event });\n  }\n\n  checkImage(event) {\n    this.setState({ image: event });\n  }\n}\n\n  export default NewTileForm","import React, { Component } from 'react'\nimport BoardHandler from './BoardHandler.js';\nimport Tile from './Tile.js';\nimport '../index.css'\nimport NewTileForm from './NewTileForm'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Helmet } from 'react-helmet';\n\n\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.homeScreen = this.homeScreen.bind(this);\n        this.addTiles = this.addTiles.bind(this);\n        this.activateDeleteTile = this.activateDeleteTile.bind(this);\n        this.name = this.props.name;\n        this.tiles = this.props.tiles;\n\n        this.state = { newForm: false, delTile: false, tiles: this.tiles, changes: 0, color: 'white' }\n    }\n\n    render() {\n        let rows = this.createTiles();\n        if (!this.state.newForm) {\n            return (\n                <div className=\"container text\">\n                    <Helmet>\n                        <style>{`body { background-color: background: #2C3E50;  /* fallback for old browsers */\n                                background: -webkit-linear-gradient(to right, #4CA1AF, #2C3E50);  /* Chrome 10-25, Safari 5.1-6 */\n                                background: linear-gradient(to right, #4CA1AF, #2C3E50); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n                                ; }`}</style>\n                    </Helmet>\n                    <div id={this.name} className=\"container\">\n                        <h1 className=\"text-center board-title\" style={{color: this.state.color}}>{this.name}</h1>\n                        {Object.keys(rows).map(row => {\n                            return (\n                                <div className=\"row items__row text-center\" key={row}>\n                                    {rows[row].map(item => {\n                                        return <Col className=\"col-3 mt-2 mb-3 d-flex align-items-stretch\">{item}</Col>;\n                                    })}\n                                </div>\n                            )\n                        })}\n                        <button type=\"submit\" className=\"btn btn-success mb-2  btn-lg\" onClick={this.addTiles}>Add Tile</button>\n                        <button type=\"submit\" className=\"btn btn-danger mb-2 float-right btn-lg\" onClick={this.activateDeleteTile}>Delete Tile</button>\n\n                    </div>\n                    <div className=\"text-center\">\n                        <button type=\"submit\" className=\"btn btn-primary mb-2 ml-auto btn-lg\" onClick={this.props.selectBoard}>Select Board</button>\n                    </div>\n                </div>\n            )\n        } else\n            return (<NewTileForm homeScreen={this.homeScreen} tiles={this.tiles} boardName={this.props.boardName} />)\n    }\n\n    homeScreen() {\n        this.setState({ newForm: false });\n    }\n\n    createTiles() {\n        let rows = {};\n        let counter = 1, pos = 0;\n        this.state.tiles.forEach((tile, idx) => {\n            console.log(pos)\n            rows[counter] = rows[counter] ? [...rows[counter]] : [];\n            if (idx % 4 == 0 && idx !== 0) {\n                counter++;\n                rows[counter] = rows[counter] ? [...rows[counter]] : []\n                rows[counter].push(<Tile className=\"mt-3 \" key={pos} data-key={pos} name={this.state.tiles[idx].name} image={this.state.tiles[idx].image} onClick={this.clickTile.bind(this, pos, this.state.tiles[idx].name)} />);\n            } else {\n                rows[counter].push(<Tile className=\"mt-3 \" key={pos} data-key={pos} name={this.state.tiles[idx].name} image={this.state.tiles[idx].image} onClick={this.clickTile.bind(this, pos, this.state.tiles[idx].name)} />);\n            }\n            pos++;\n        })\n        return rows;\n    }\n\n    addTiles() {\n        this.setState({ newForm: true });\n    }\n\n    changeBackground() {\n        if (this.state.color == 'white') \n            this.setState((state, props) => ({ color: 'red' }));\n        else\n            this.setState((state, props) => ({ color: 'white' }));\n    }\n\n    activateDeleteTile() {\n        this.setState((state, props) => ({ delTile: !state.delTile }));\n        this.changeBackground();\n    }\n\n    clickTile(i, name, e) {\n        if (this.state.delTile == true) {\n            this.tiles.splice(i, 1);\n            this.setState((state, props) => ({ changes: state.changes++ }));\n            this.setState({ delTile: false });\n            this.updateStorage();\n            this.changeBackground();\n        } else {\n            var msg = new SpeechSynthesisUtterance();\n            msg.text = name;\n            window.speechSynthesis.speak(msg);\n        }\n    }\n\n    updateStorage() {\n        localStorage.setItem(this.props.boardName, JSON.stringify(this.props.tiles));\n    }\n\n}\n\nexport default Board","import React, { Component } from 'react'\nimport Board from './Board.js';\nimport '../index.css'\nimport { Helmet } from 'react-helmet';\nimport checkImage from '../Components/imgs/check.png'\n\n// Now update the states when an item is updated in the board\n\nclass BoardHandler extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apple = 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse1.mm.bing.net%2Fth%3Fid%3DOIP.LElaIzkrLIndPvZg-j5CQwHaIe%26pid%3DApi&f=1';\n        this.water = 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.pngarts.com%2Ffiles%2F1%2FWater-Cup-PNG-High-Quality-Image.png&f=1&nofb=1';\n        this.meal = 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwebstockreview.net%2Fimages%2Fclipart-borders-pizza.png&f=1&nofb=1';\n        this.bathroom = 'https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fwww.freeiconspng.com%2Fuploads%2Funisex-restroom-sign-decal-9.png&f=1&nofb=1';\n        this.play = 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.nicepng.com%2Fpng%2Ffull%2F76-763452_abc-blocks-png-abc-alphabet.png&f=1&nofb=1';\n        this.default = [{ \"name\": \"Snack\", \"image\": this.apple }, { \"name\": \"Thirsty\", \"image\": this.water }, { \"name\": \"Lunch\", \"image\": this.meal }, { \"name\": \"Bathroom\", \"image\": this.bathroom }, { \"name\": \"Play\", \"image\": this.play }];\n        this.tiles = [];\n        this.boardName = '';\n        this.selectBoard = this.selectBoard.bind(this);\n        this.state = { selectBoard: true }\n    }\n\n    render() {\n        if (this.state.selectBoard)\n            return (this.boardForm());\n        else\n            return (<Board name={this.boardName} tiles={this.tiles} boardName={this.boardName} selectBoard={this.selectBoard} />);\n\n    }\n\n    boardForm() {\n        return (<div className>\n            <Helmet>\n                <style>{'body { background: -webkit-linear-gradient(left, #0072ff, #00c6ff); }'}</style>\n            </Helmet>\n            <div className=\"container contact-form\">\n                <div className=\"contact-image\">\n                    <img src={checkImage} alt=\"rocket_contact\" />\n                </div>\n                <form onSubmit={this.submit} id=\"submit-board\">\n                    <h1>Create/Load a Board</h1>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"form-group\">\n                                <h4>Board Name</h4>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" name=\"txtName\" className=\"form-control\" placeholder=\"Drake's Board *\" required />\n                            </div>\n                            <div className=\"d-flex justify-content-center mb-2\">\n                                <input type=\"submit\" name=\"btnSubmit\" className=\"btnContact btn-success\" value=\"Create\" onClick={() => (this.state.button = 2)}/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"submit\" name=\"btnSubmit\" className=\"btnContact btn-primary\" value=\"Load\" onClick={() => (this.state.button = 1)} />\n                                <input type=\"submit\" className=\"btnContact btn-danger\" value=\"Delete\"  onClick={() => (this.state.button = 3)}/>\n                            </div>\n                            <div className=\"form-group\">\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>)\n    }\n\n    submit = (event) => {\n        event.preventDefault()\n        //Load\n        if (this.state.button == 1) {\n            if (localStorage.getItem(event.target[0].value)) {\n                this.tiles = JSON.parse(localStorage.getItem(event.target[0].value));\n                this.boardName = event.target[0].value;\n                this.setState({ selectBoard: false })\n            }\n            else alert(\"Board not found\")\n        }\n        //Create\n        else if (this.state.button == 2) {\n            if (JSON.parse(localStorage.getItem(event.target[0].value)) == null) {\n                this.tiles = JSON.parse(JSON.stringify(this.default))\n                localStorage.setItem(event.target[0].value, JSON.stringify(this.tiles));\n                this.boardName = event.target[0].value;\n                this.setState({ selectBoard: false });\n            } else alert(\"Board already exists\")\n        //Delete\n        } else {\n            localStorage.removeItem(event.target[0].value);\n            document.getElementById(\"submit-board\").reset();\n        }\n        \n    }\n\n    selectBoard() {\n        this.setState({ selectBoard: true });\n    }\n}\n\nexport default BoardHandler","import React, { Component } from 'react'\nimport BoardHandler from './Components/BoardHandler'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <BoardHandler />\n        );\n\n    }\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}